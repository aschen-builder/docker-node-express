#!/usr/bin/env node

/**
 * Module dependencies
 */

var app = require('../app');
var http = require('http');

const path = require('path');
require('dotenv').config({ path: path.join(__dirname, '../.env') });

const logger = require('../util/logger');

logger.log('info', 'Starting server...');
logger.log('info', 'Loaded ENV variables');

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

var server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    logger.log('error', error);
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      logger.log('error', '%s requires elevated privileges', bind);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      logger.log('error', '%s is already in use', bind);
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  logger.log('info', 'Listening on %s', bind);
}